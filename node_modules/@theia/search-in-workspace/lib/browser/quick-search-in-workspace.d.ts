import { QuickOpenService, QuickOpenModel, QuickOpenItem } from '@theia/core/lib/browser/quick-open/';
import { MenuModelRegistry, MenuContribution, CommandContribution, CommandRegistry, ILogger } from '@theia/core';
import { OpenerService, KeybindingContribution, KeybindingRegistry } from '@theia/core/lib/browser';
import { SearchInWorkspaceService } from './search-in-workspace-service';
import { LabelProvider } from '@theia/core/lib/browser/label-provider';
export declare class QuickSearchInWorkspace implements QuickOpenModel {
    protected readonly quickOpenService: QuickOpenService;
    protected readonly searchInWorkspaceService: SearchInWorkspaceService;
    protected readonly openerService: OpenerService;
    protected readonly labelProvider: LabelProvider;
    protected readonly logger: ILogger;
    private currentSearchId;
    protected MAX_RESULTS: number;
    constructor(quickOpenService: QuickOpenService, searchInWorkspaceService: SearchInWorkspaceService, openerService: OpenerService, labelProvider: LabelProvider, logger: ILogger);
    isEnabled(): boolean;
    onType(lookFor: string, acceptor: (items: QuickOpenItem[]) => void): void;
    showFakeResult(label: string, acceptor: (items: QuickOpenItem[]) => void): void;
    cancelCurrentSeach(): void;
    open(): void;
}
export declare class SearchInWorkspaceContributions implements CommandContribution, MenuContribution, KeybindingContribution {
    protected readonly quickSeachInWorkspace: QuickSearchInWorkspace;
    constructor(quickSeachInWorkspace: QuickSearchInWorkspace);
    registerCommands(registry: CommandRegistry): void;
    registerMenus(menus: MenuModelRegistry): void;
    registerKeybindings(keybindings: KeybindingRegistry): void;
}
