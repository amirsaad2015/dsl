import URI from '@theia/core/lib/common/uri';
import { Resource, ResourceResolver, Emitter, Event, MaybePromise, DisposableCollection } from '@theia/core/lib/common';
import { UserStorageService } from './user-storage-service';
export declare class UserStorageResource implements Resource {
    uri: URI;
    protected readonly service: UserStorageService;
    protected readonly onDidChangeContentsEmitter: Emitter<void>;
    protected readonly toDispose: DisposableCollection;
    constructor(uri: URI, service: UserStorageService);
    dispose(): void;
    readContents(options?: {
        encoding?: string;
    }): Promise<string>;
    saveContents(content: string): Promise<void>;
    readonly onDidChangeContents: Event<void>;
}
export declare class UserStorageResolver implements ResourceResolver {
    protected readonly service: UserStorageService;
    constructor(service: UserStorageService);
    resolve(uri: URI): MaybePromise<UserStorageResource>;
}
