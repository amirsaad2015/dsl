import { DisposableCollection, ILogger, Emitter, Event } from '@theia/core/lib/common';
import { UserStorageChangeEvent, UserStorageService } from './user-storage-service';
import { FileChange, FileSystemWatcher } from '@theia/filesystem/lib/browser/filesystem-watcher';
import { FileSystem } from "@theia/filesystem/lib/common";
import URI from '@theia/core/lib/common/uri';
export declare class UserStorageServiceFilesystemImpl implements UserStorageService {
    protected readonly fileSystem: FileSystem;
    protected readonly watcher: FileSystemWatcher;
    protected readonly logger: ILogger;
    protected readonly toDispose: DisposableCollection;
    protected readonly onUserStorageChangedEmitter: Emitter<UserStorageChangeEvent>;
    protected readonly userStorageFolder: Promise<URI>;
    constructor(fileSystem: FileSystem, watcher: FileSystemWatcher, logger: ILogger);
    dispose(): void;
    onDidFilesChanged(fileChanges: FileChange[]): void;
    readContents(uri: URI): Promise<string>;
    saveContents(uri: URI, content: string): Promise<void>;
    readonly onUserStorageChanged: Event<UserStorageChangeEvent>;
    /**
     * Creates a new user storage URI from the filesystem URI.
     * @param userStorageFolderUri User storage folder URI
     * @param fsPath The filesystem URI
     */
    static toUserStorageUri(userStorageFolderUri: URI, rawUri: URI): URI;
    /**
     * Returns the path relative to the user storage filesystem uri i.e if the user storage root is
     * 'file://home/user/.theia' and the fileUri is 'file://home/user.theia/keymaps.json' it will return 'keymaps.json'
     * @param userStorageFolderUri User storage folder URI
     * @param fileUri User storage
     */
    private static getRelativeUserStoragePath(userStorageFolderUri, fileUri);
    /**
     * Returns the associated filesystem URI relative to the user storage folder passed as argument.
     * @param userStorageFolderUri User storage folder URI
     * @param userStorageUri User storage URI to be converted in filesystem URI
     */
    static toFilesystemURI(userStorageFolderUri: URI, userStorageUri: URI): URI;
}
