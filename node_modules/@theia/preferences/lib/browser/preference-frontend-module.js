"use strict";
/*
 * Copyright (C) 2018 Ericsson and others.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 */
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = require("inversify");
var preferences_1 = require("@theia/core/lib/browser/preferences");
var user_preference_provider_1 = require("./user-preference-provider");
var workspace_preference_provider_1 = require("./workspace-preference-provider");
function bindPreferences(bind, rebind) {
    bind(user_preference_provider_1.UserPreferenceProvider).toSelf().inSingletonScope();
    bind(workspace_preference_provider_1.WorkspacePreferenceProvider).toSelf().inSingletonScope();
    rebind(preferences_1.PreferenceProviders).toFactory(function (ctx) { return function () {
        var userProvider = ctx.container.get(user_preference_provider_1.UserPreferenceProvider);
        var workspaceProvider = ctx.container.get(workspace_preference_provider_1.WorkspacePreferenceProvider);
        return [userProvider, workspaceProvider];
    }; });
}
exports.bindPreferences = bindPreferences;
exports.default = new inversify_1.ContainerModule(function (bind, unbind, isBound, rebind) {
    bindPreferences(bind, rebind);
});
//# sourceMappingURL=preference-frontend-module.js.map