import { FrontendApplicationContribution, FrontendApplication, KeybindingRegistry } from '@theia/core/lib/browser';
import { Disposable, DisposableCollection, CommandRegistry, ILogger, ResourceProvider, Resource } from '@theia/core/lib/common';
import URI from '@theia/core/lib/common/uri';
import * as ajv from 'ajv';
export declare const keymapsSchema: {
    "type": string;
    "properties": {
        "keybinding": {
            "type": string;
        };
        "command": {
            "type": string;
        };
        "context": {
            "type": string;
        };
    };
    "required": string[];
    "optional": string[];
    "additionalProperties": boolean;
};
export declare const keymapsUri: URI;
export declare class KeymapsService implements Disposable, FrontendApplicationContribution {
    protected readonly resourceProvider: ResourceProvider;
    protected readonly commandRegistry: CommandRegistry;
    protected readonly keyBindingRegistry: KeybindingRegistry;
    protected readonly logger: ILogger;
    protected readonly toDispose: DisposableCollection;
    protected readonly ajv: ajv.Ajv;
    protected ready: boolean;
    protected keymapsResource: Resource;
    constructor(resourceProvider: ResourceProvider, commandRegistry: CommandRegistry, keyBindingRegistry: KeybindingRegistry, logger: ILogger);
    dispose(): void;
    onStart(app: FrontendApplication): void;
    protected onDidChangeKeymap(): void;
    protected parseKeybindings(content: string): void;
    protected setKeymap(keybindings: any): void;
}
