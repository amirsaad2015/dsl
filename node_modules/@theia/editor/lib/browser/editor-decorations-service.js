"use strict";
/*
 * Copyright (C) 2018 TypeFox and others.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 */
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = require("inversify");
var editor_manager_1 = require("./editor-manager");
var diff_uris_1 = require("./diff-uris");
var uri_1 = require("@theia/core/lib/common/uri");
var EditorDecorationsService = /** @class */ (function () {
    function EditorDecorationsService(editorManager) {
        this.editorManager = editorManager;
        this.appliedDecorations = new Map();
    }
    /**
     * Applies new decorations of the given kind in an editor opened whith the given uri.
     * Previously applied decoration of the same kind are removed.
     *
     * To remove decorations of a kind, client should pass an empty array for new decorations.
     *
     * Clients should create qualified kinds for decorations to avoid colisions.
     */
    EditorDecorationsService.prototype.setDecorations = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            var editor, key, oldDecorations, appliedDecorations;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.findEditorByUri(params.uri)];
                    case 1:
                        editor = _a.sent();
                        if (editor) {
                            key = params.uri + "#" + params.kind;
                            oldDecorations = this.appliedDecorations.get(key) || [];
                            appliedDecorations = editor.deltaDecorations(__assign({ oldDecorations: oldDecorations }, params));
                            this.appliedDecorations.set(key, appliedDecorations);
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Removes old decorations and applies new decorations in an editor opened whith the given uri.
     *
     * @returns identifiers of applied decorations, which can be used to remove them in next call,
     * or `undefined` if no editor could be found with the given uri.
     */
    EditorDecorationsService.prototype.deltaDecorations = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            var editor;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.findEditorByUri(params.uri)];
                    case 1:
                        editor = _a.sent();
                        if (editor) {
                            return [2 /*return*/, editor.deltaDecorations(params)];
                        }
                        return [2 /*return*/, undefined];
                }
            });
        });
    };
    EditorDecorationsService.prototype.findEditorByUri = function (uri) {
        return __awaiter(this, void 0, void 0, function () {
            var editorWidget, editorUri, openedInEditor, openedInDiffEditor;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.editorManager.getByUri(new uri_1.default(uri))];
                    case 1:
                        editorWidget = _a.sent();
                        if (editorWidget) {
                            editorUri = editorWidget.editor.uri;
                            openedInEditor = editorUri.toString() === uri;
                            openedInDiffEditor = diff_uris_1.DiffUris.isDiffUri(editorUri) && diff_uris_1.DiffUris.decode(editorUri).some(function (u) { return u.toString() === uri; });
                            if (openedInEditor || openedInDiffEditor) {
                                return [2 /*return*/, editorWidget.editor];
                            }
                        }
                        return [2 /*return*/, undefined];
                }
            });
        });
    };
    EditorDecorationsService = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(editor_manager_1.EditorManager)),
        __metadata("design:paramtypes", [editor_manager_1.EditorManager])
    ], EditorDecorationsService);
    return EditorDecorationsService;
}());
exports.EditorDecorationsService = EditorDecorationsService;
var OverviewRulerLane;
(function (OverviewRulerLane) {
    OverviewRulerLane[OverviewRulerLane["Left"] = 1] = "Left";
    OverviewRulerLane[OverviewRulerLane["Center"] = 2] = "Center";
    OverviewRulerLane[OverviewRulerLane["Right"] = 4] = "Right";
    OverviewRulerLane[OverviewRulerLane["Full"] = 7] = "Full";
})(OverviewRulerLane = exports.OverviewRulerLane || (exports.OverviewRulerLane = {}));
var TrackedRangeStickiness;
(function (TrackedRangeStickiness) {
    TrackedRangeStickiness[TrackedRangeStickiness["AlwaysGrowsWhenTypingAtEdges"] = 0] = "AlwaysGrowsWhenTypingAtEdges";
    TrackedRangeStickiness[TrackedRangeStickiness["NeverGrowsWhenTypingAtEdges"] = 1] = "NeverGrowsWhenTypingAtEdges";
    TrackedRangeStickiness[TrackedRangeStickiness["GrowsOnlyWhenTypingBefore"] = 2] = "GrowsOnlyWhenTypingBefore";
    TrackedRangeStickiness[TrackedRangeStickiness["GrowsOnlyWhenTypingAfter"] = 3] = "GrowsOnlyWhenTypingAfter";
})(TrackedRangeStickiness = exports.TrackedRangeStickiness || (exports.TrackedRangeStickiness = {}));
//# sourceMappingURL=editor-decorations-service.js.map