"use strict";
/*
 * Copyright (C) 2017 Ericsson and others.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 */
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = require("inversify");
var common_1 = require("@theia/core/lib/common");
var task_frontend_contribution_1 = require("./task-frontend-contribution");
var messaging_1 = require("@theia/core/lib/browser/messaging");
var task_protocol_1 = require("../common/task-protocol");
var task_watcher_1 = require("../common/task-watcher");
var task_service_1 = require("./task-service");
var quick_open_task_1 = require("./quick-open-task");
var task_configurations_1 = require("./task-configurations");
exports.default = new inversify_1.ContainerModule(function (bind) {
    bind(task_frontend_contribution_1.TaskFrontendContribution).toSelf().inSingletonScope();
    bind(task_service_1.TaskService).toSelf().inSingletonScope();
    bind(common_1.CommandContribution).to(task_frontend_contribution_1.TaskFrontendContribution).inSingletonScope();
    bind(common_1.MenuContribution).to(task_frontend_contribution_1.TaskFrontendContribution).inSingletonScope();
    bind(task_watcher_1.TaskWatcher).toSelf().inSingletonScope();
    bind(quick_open_task_1.QuickOpenTask).toSelf().inSingletonScope();
    bind(task_configurations_1.TaskConfigurations).toSelf().inSingletonScope();
    bind(task_protocol_1.TaskServer).toDynamicValue(function (ctx) {
        var connection = ctx.container.get(messaging_1.WebSocketConnectionProvider);
        var taskWatcher = ctx.container.get(task_watcher_1.TaskWatcher);
        return connection.createProxy(task_protocol_1.taskPath, taskWatcher.getTaskClient());
    }).inSingletonScope();
});
//# sourceMappingURL=task-frontend-module.js.map