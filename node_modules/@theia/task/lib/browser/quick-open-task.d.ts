import { TaskService } from './task-service';
import { TaskInfo } from '../common/task-protocol';
import { QuickOpenService, QuickOpenModel, QuickOpenItem, QuickOpenMode } from '@theia/core/lib/browser/quick-open/';
export declare class QuickOpenTask implements QuickOpenModel {
    protected readonly taskService: TaskService;
    protected readonly quickOpenService: QuickOpenService;
    protected items: QuickOpenItem[];
    constructor(taskService: TaskService, quickOpenService: QuickOpenService);
    open(): void;
    attach(): void;
    getItems(lookFor: string): QuickOpenItem[];
    onType(lookFor: string, acceptor: (items: QuickOpenItem[]) => void): void;
    protected getRunningTaskLabel(task: TaskInfo): string;
}
export declare class TaskRunQuickOpenItem extends QuickOpenItem {
    protected readonly taskLabel: string;
    protected taskService: TaskService;
    constructor(taskLabel: string, taskService: TaskService);
    getLabel(): string;
    run(mode: QuickOpenMode): boolean;
}
export declare class TaskAttachQuickOpenItem extends QuickOpenItem {
    protected readonly task: TaskInfo;
    protected readonly taskLabel: string;
    protected taskService: TaskService;
    constructor(task: TaskInfo, taskLabel: string, taskService: TaskService);
    getLabel(): string;
    run(mode: QuickOpenMode): boolean;
}
