import { FileSystem, FileStat, FileSystemClient } from '../filesystem';
export declare class MockFilesystem implements FileSystem {
    dispose(): void;
    getFileStat(uri: string): Promise<FileStat>;
    exists(uri: string): Promise<boolean>;
    resolveContent(uri: string, options?: {
        encoding?: string;
    }): Promise<{
        stat: FileStat;
        content: string;
    }>;
    setContent(file: FileStat, content: string, options?: {
        encoding?: string;
    }): Promise<FileStat>;
    move(sourceUri: string, targetUri: string, options?: {
        overwrite?: boolean;
    }): Promise<FileStat>;
    copy(sourceUri: string, targetUri: string, options?: {
        overwrite?: boolean;
        recursive?: boolean;
    }): Promise<FileStat>;
    createFile(uri: string, options?: {
        content?: string;
        encoding?: string;
    }): Promise<FileStat>;
    createFolder(uri: string): Promise<FileStat>;
    touchFile(uri: string): Promise<FileStat>;
    delete(uri: string, options?: {
        moveToTrash?: boolean;
    }): Promise<void>;
    getEncoding(uri: string): Promise<string>;
    getRoots(): Promise<FileStat[]>;
    getCurrentUserHome(): Promise<FileStat>;
    setClient(client: FileSystemClient): void;
}
