import { h } from "@phosphor/virtualdom";
import { Message } from "@phosphor/messaging";
import { ContextMenuRenderer, TreeWidget, NodeProps, TreeProps, ITreeNode } from "@theia/core/lib/browser";
import { ElementAttrs } from "@phosphor/virtualdom";
import { FileTreeModel } from "./file-tree-model";
import { DisposableCollection } from '@theia/core/lib/common';
export declare const FILE_TREE_CLASS = "theia-FileTree";
export declare const FILE_STAT_NODE_CLASS = "theia-FileStatNode";
export declare const DIR_NODE_CLASS = "theia-DirNode";
export declare const FILE_STAT_ICON_CLASS = "theia-FileStatIcon";
export declare class FileTreeWidget extends TreeWidget {
    readonly props: TreeProps;
    readonly model: FileTreeModel;
    protected readonly toCancelNodeExpansion: DisposableCollection;
    constructor(props: TreeProps, model: FileTreeModel, contextMenuRenderer: ContextMenuRenderer);
    protected createNodeClassNames(node: ITreeNode, props: NodeProps): string[];
    protected renderIcon(node: ITreeNode, props: NodeProps): h.Child;
    protected onAfterAttach(msg: Message): void;
    protected createNodeAttributes(node: ITreeNode, props: NodeProps): ElementAttrs;
    protected handleDragStartEvent(node: ITreeNode, event: DragEvent): void;
    protected handleDragEnterEvent(node: ITreeNode | undefined, event: DragEvent): void;
    protected handleDragOverEvent(node: ITreeNode | undefined, event: DragEvent): void;
    protected handleDragLeaveEvent(node: ITreeNode | undefined, event: DragEvent): void;
    protected handleDropEvent(node: ITreeNode | undefined, event: DragEvent): void;
    protected setTreeNodeAsData(data: DataTransfer, node: ITreeNode): void;
    protected getTreeNodeFromData(data: DataTransfer): ITreeNode | undefined;
}
