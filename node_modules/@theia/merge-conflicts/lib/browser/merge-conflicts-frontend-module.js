"use strict";
/*
 * Copyright (C) 2018 TypeFox and others.
 *
 * Licensed under the Apache License, Version 2.0 (the 'License'); you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 */
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = require("inversify");
var browser_1 = require("@theia/core/lib/browser");
var common_1 = require("@theia/core/lib/common");
var merge_conflicts_frontend_contribution_1 = require("./merge-conflicts-frontend-contribution");
var merge_conflicts_code_lense_provider_1 = require("./merge-conflicts-code-lense-provider");
var merge_conflicts_parser_1 = require("./merge-conflicts-parser");
var merge_conflict_resolver_1 = require("./merge-conflict-resolver");
var merge_conflicts_service_1 = require("./merge-conflicts-service");
var merge_conflicts_decorations_1 = require("./merge-conflicts-decorations");
require("../../src/browser/style/index.css");
exports.default = new inversify_1.ContainerModule(function (bind) {
    bind(merge_conflicts_parser_1.MergeConflictsParser).toSelf().inSingletonScope();
    bind(merge_conflict_resolver_1.MergeConflictResolver).toSelf().inSingletonScope();
    bind(merge_conflicts_code_lense_provider_1.MergeConflictsCodeLensProvider).toSelf().inSingletonScope();
    bind(merge_conflicts_decorations_1.MergeConflictsDecorations).toSelf().inSingletonScope();
    bind(merge_conflicts_frontend_contribution_1.MergeConflictsFrontendContribution).toSelf().inSingletonScope();
    bind(merge_conflicts_service_1.MergeConflictsService).toSelf().inSingletonScope();
    [common_1.CommandContribution, browser_1.FrontendApplicationContribution].forEach(function (serviceIdentifier) {
        return bind(serviceIdentifier).toDynamicValue(function (c) { return c.container.get(merge_conflicts_frontend_contribution_1.MergeConflictsFrontendContribution); }).inSingletonScope();
    });
});
//# sourceMappingURL=merge-conflicts-frontend-module.js.map