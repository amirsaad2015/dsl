/// <reference types="node" />
import { ProcessManager } from './process-manager';
import { ILogger } from '@theia/core/lib/common';
import { Process, ProcessOptions } from './process';
import { ChildProcess } from 'child_process';
import * as stream from 'stream';
export declare const RawProcessOptions: unique symbol;
export interface RawProcessOptions extends ProcessOptions {
}
export declare const RawProcessFactory: unique symbol;
export interface RawProcessFactory {
    (options: RawProcessOptions): RawProcess;
}
export declare class RawProcess extends Process {
    readonly input: stream.Writable;
    readonly output: stream.Readable;
    readonly errorOutput: stream.Readable;
    readonly process: ChildProcess;
    constructor(options: RawProcessOptions, processManager: ProcessManager, logger: ILogger);
    readonly pid: number;
    kill(signal?: string): void;
}
