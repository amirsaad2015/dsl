import { AbstractDefaultCallHierarchyService, CallHierarchyContext } from "@theia/callhierarchy/lib/browser/callhierarchy-service-impl";
import { SymbolInformation, Location } from 'vscode-languageserver-types';
export declare class TypeScriptCallHierarchyService extends AbstractDefaultCallHierarchyService {
    readonly languageId: string;
    /**
     * Finds the symbol that encloses the definition range of a caller.
     *
     * In the case of typescript, a method's definition and all its override definitions
     * are returned as a reference as well. As these are not calls they have to be filtered.
     * We also just want ot see the top-most caller symbol.
     */
    getEnclosingCallerSymbol(reference: Location, context: CallHierarchyContext): Promise<SymbolInformation | undefined>;
}
