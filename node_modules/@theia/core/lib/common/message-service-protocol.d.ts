import { ILogger } from "./logger";
export declare const messageServicePath = "/services/messageService";
export declare enum MessageType {
    Error = 1,
    Warning = 2,
    Info = 3,
    Log = 4,
}
export interface Message {
    type: MessageType;
    text: string;
    actions?: string[];
}
export declare class MessageClient {
    protected readonly logger: ILogger;
    constructor(logger: ILogger);
    /**
     * Show a message of the given type and possible actions to the user.
     * Resolve to a chosen action.
     * Never reject.
     *
     * To be implemented by an extension, e.g. by the messages extension.
     */
    showMessage(message: Message): Promise<string | undefined>;
}
export declare class DispatchingMessageClient extends MessageClient {
    readonly clients: Set<MessageClient>;
    showMessage(message: Message): Promise<string | undefined>;
}
