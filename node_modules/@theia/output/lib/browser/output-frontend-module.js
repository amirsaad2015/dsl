"use strict";
/*
 * Copyright (C) 2018 TypeFox and others.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 */
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = require("inversify");
var output_widget_1 = require("./output-widget");
var browser_1 = require("@theia/core/lib/browser");
var browser_2 = require("@theia/core/lib/browser");
var core_1 = require("@theia/core");
var output_contribution_1 = require("./output-contribution");
var output_channel_1 = require("../common/output-channel");
var output_preferences_1 = require("../common/output-preferences");
exports.default = new inversify_1.ContainerModule(function (bind, unbind, isBound, rebind) {
    output_preferences_1.bindOutputPreferences(bind);
    bind(output_widget_1.OutputWidget).toSelf();
    bind(output_channel_1.OutputChannelManager).to(output_channel_1.OutputChannelManager).inSingletonScope();
    bind(browser_1.WidgetFactory).toDynamicValue(function (context) { return ({
        id: output_widget_1.OUTPUT_WIDGET_KIND,
        createWidget: function () { return context.container.get(output_widget_1.OutputWidget); }
    }); });
    bind(output_contribution_1.OutputContribution).toSelf().inSingletonScope();
    bind(core_1.CommandContribution).toDynamicValue(function (context) { return context.container.get(output_contribution_1.OutputContribution); });
    bind(browser_2.KeybindingContribution).toDynamicValue(function (c) { return c.container.get(output_contribution_1.OutputContribution); });
    bind(core_1.MenuContribution).toDynamicValue(function (context) { return context.container.get(output_contribution_1.OutputContribution); });
});
//# sourceMappingURL=output-frontend-module.js.map