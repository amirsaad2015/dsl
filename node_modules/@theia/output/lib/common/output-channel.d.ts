import { Event } from "@theia/core";
import { OutputPreferences } from "./output-preferences";
export interface OutputChannel {
    append(value: string): void;
    appendLine(line: string): void;
}
export declare class OutputChannelManager {
    protected preferences: OutputPreferences;
    protected readonly channels: Map<string, OutputChannelImpl>;
    private readonly channelAddedEmitter;
    readonly onChannelAdded: Event<OutputChannelImpl>;
    constructor(preferences: OutputPreferences);
    getChannel(name: string): OutputChannelImpl;
    getChannels(): OutputChannelImpl[];
}
export declare class OutputChannelImpl implements OutputChannel {
    readonly name: string;
    readonly preferences: OutputPreferences;
    private readonly contentChangeEmitter;
    private lines;
    private currentLine;
    readonly onContentChange: Event<OutputChannelImpl>;
    constructor(name: string, preferences: OutputPreferences);
    append(value: string): void;
    appendLine(line: string): void;
    getLines(): string[];
}
