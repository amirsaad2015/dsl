"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/* --------------------------------------------------------------------------------------------
 * Copyright (c) 2017 TypeFox GmbH (http://www.typefox.io). All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
var messageReader_1 = require("vscode-jsonrpc/lib/messageReader");
var stream_1 = require("./stream");
var AbstractStreamMessageReader = (function (_super) {
    __extends(AbstractStreamMessageReader, _super);
    function AbstractStreamMessageReader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AbstractStreamMessageReader.prototype.readMessage = function (message, callback) {
        var _this = this;
        var readable = new stream_1.ReadableStream(message);
        var reader = new messageReader_1.StreamMessageReader(readable);
        reader.onError(function (e) { return _this.fireError(e); });
        reader.onClose(function () { return _this.fireClose(); });
        reader.onPartialMessage(function (info) { return _this.firePartialMessage(info); });
        reader.listen(callback);
    };
    return AbstractStreamMessageReader;
}(messageReader_1.AbstractMessageReader));
exports.AbstractStreamMessageReader = AbstractStreamMessageReader;
//# sourceMappingURL=reader.js.map